#BlueJ class context
comment0.params=
comment0.target=boolean\ connect()
comment0.text=\ \r\n\ Clase\ abstracta\ para\ comunicacion\ con\ motores\ de\ base\ de\ datos.\r\n\ <p>\r\nEs\ obligatoria\ su\ implementacion.\r\n\ @see\ \ \ \ \ \ \ \ \ \ \ \ \ ConnectorFirebird\r\n\ @see\ \ \ \ \ \ \ \ \ \ \ \ \ ConnectorMysql\r\n\ @since\ \ \ \ \ \ \ \ \ \ \ 1.0\r\n
comment1.params=
comment1.target=java.lang.String\ getDriver()
comment1.text=\r\nObtiene\ el\ driver\ de\ conexion\ con\ motor\ de\ base\ de\ datos.\r\n\ @since\ \ \ \ \ 1.0\r\n\ @return\ \ \ \ \ \ \ \ \ \ <code>true</code>\ si\ se\ ha\ podido\ establecer\ la\ conexion.\r\n
comment10.params=bd
comment10.target=void\ setBd(java.lang.String)
comment10.text=\r\nEstablece\ la\ ubicacion\ del\ archivo,\ para\ posterior\ conexion\ con\ motor\ de\ base\ de\ datos.\r\n\ @param\ bd\ \ \ \ La\ ubicacion\ del\ archivo\ de\ la\ base\ de\ datos.\r\n\ @since\ \ \ \ \ 1.0\r\n
comment11.params=user
comment11.target=void\ setUser(java.lang.String)
comment11.text=\r\nEstablece\ el\ usuario\ con\ privilegios,\ para\ posterior\ conexion\ con\ motor\ de\ base\ de\ datos.\r\n\ @param\ user\ \ \ \ El\ nombre\ del\ usuario\ previamente\ establecido,\r\n\ en\ la\ configuracion\ de\ la\ base\ de\ datos.\r\n\ @since\ \ \ \ \ 1.0\r\n
comment12.params=pass
comment12.target=void\ setPass(java.lang.String)
comment12.text=\r\nEstablece\ la\ contrase\u00F1a\ para\ el\ usuario,\ para\ posterior\ conexion\ con\ motor\ de\ base\ de\ datos.\r\n\ @param\ pass\ \ \ La\ contrase\u00F1a\ del\ usuario\ para\ conexion\ con\ motor\ de\ base\ de\ datos.\r\n\ @since\ \ \ \ \ 1.0\r\n
comment13.params=driver
comment13.target=void\ setDriver(java.lang.String)
comment13.text=\r\nEstablece\ el\ driver\ de\ comunicacion,\ para\ posterior\ conexion\ con\ motor\ de\ base\ de\ datos.\r\n\ @param\ driver\ \ \ \ El\ driver\ de\ comunicacion\ jdbc/odbc\ para\ la\ conexion\ con\ la\ base\ de\ datos.\r\n\ @since\ \ \ \ \ 1.0\r\n
comment14.params=encoding
comment14.target=void\ setEncoding(java.lang.String)
comment14.text=\r\nEstablece\ el\ encoding,\ para\ posterior\ conexion\ con\ motor\ de\ base\ de\ datos.\r\n\ @param\ encoding\ \ \ \ El\ encoding,\ puede\ ser\ encoding\=NONE\ en\ firebird,\ a\ partir\ de\ la\ version\ 3.0.\r\n\ @since\ \ \ \ \ 1.0\r\n
comment15.params=protocol
comment15.target=void\ setProtocol(java.lang.String)
comment15.text=\r\nEstablece\ el\ protocolo,\ para\ posterior\ conexion\ con\ motor\ de\ base\ de\ datos.\r\n\ @param\ protocol\ \ \ \ El\ protocolo\ que\ se\ deba\ utilizar,\ para\ su\ posterior\ comunicacion\ con\ la\ base\ de\ datos.\r\n\ @since\ \ \ \ \ 1.0\r\n
comment16.params=conn
comment16.target=void\ setConn(java.sql.Connection)
comment16.text=\r\nEstablece\ la\ conexion(previamente\ establecida),\ para\ posterior\ conexion\ con\ motor\ de\ base\ de\ datos.\r\n\ @param\ bd\ \ \ \ El\ encoding,\ puede\ ser\ encoding\=NONE\ en\ firebird,\ a\ partir\ de\ la\ version\ 3.0\r\n\ @param\ Observar\ que\ el\ campo\ de\ instancia\ conn,\ es\ una\ variable\ estatica.\ visible\ para\ sus\ subsclases.\r\n\ @since\ \ \ \ \ 1.0\r\n
comment17.params=conn\ query
comment17.target=java.sql.ResultSet\ getRS(java.sql.Connection,\ java.lang.String)
comment17.text=\r\nDevuelve\ un\ objeto\ de\ tipo\ Resultset,\ el\ cual\ contiene\ registros\ extraidos\ desde\ una\ base\ de\ datos.\r\n\ @param\ conn\ \ \ \ La\ conexion\ previamente\ establecida\ con\ la\ base\ de\ datos.\r\n\ @param\ query\ \ \ La\ consulta\ para\ ser\ ejecutada\ por\ getRS.\r\n\ @return\ ResultSet\ \ \ \ Devuelve\ la\ consulta\ ejecutada,\ como\ un\ objeto\ ResultSet.\r\n\ @return\ null\ \ \ \ \ \ \ \ \ Devuelve\ null\ cuando\ no\ se\ han\ encontrado\ registros.\ O\ bien,\ cuando\ se\ lanza\r\n\ una\ excepcion\ SQLException.\r\n\ @since\ \ \ \ \ 1.0\r\n
comment18.params=conn\ query
comment18.target=boolean\ getQuery(java.sql.Connection,\ java.lang.String)
comment18.text=\r\nPara\ ejecutar\ consultas\ simples\ a\ un\ motor\ de\ base\ de\ datos.\r\n\ @param\ conn\ \ \ \ La\ conexion\ previamente\ establecida\ con\ la\ base\ de\ datos.\r\n\ @param\ query\ \ \ La\ consulta\ para\ ser\ ejecutada\ por\ getQuery.\r\n\ @return\ true\ \ \ true\ si\ se\ ha\ ejecutado\ con\ normalidad.\r\n\ @return\ false\ \ false\ si\ se\ lanza\ una\ excepcion\ de\ tipo\ SQLException.\r\n\ @since\ \ \ \ \ 1.0\r\n
comment19.params=conn
comment19.target=boolean\ disconnect(java.sql.Connection)
comment19.text=\r\nPara\ la\ desconexion\ con\ motor\ de\ base\ de\ datos.\r\n\ @param\ conn\ \ \ \ La\ conexion\ previamente\ establecida\ con\ la\ base\ de\ datos.\r\n\ @param\ query\ \ \ La\ consulta\ para\ ser\ ejecutada\ por\ getQuery.\r\n\ @return\ true\ \ \ true\ si\ se\ ha\ ejecutado\ con\ normalidad.\r\n\ @return\ false\ \ false\ si\ se\ lanza\ una\ excepcion\ de\ tipo\ SQLException.\r\n\ @since\ \ \ \ \ 1.0\r\n
comment2.params=
comment2.target=java.lang.String\ getProtocol()
comment2.text=\r\nObtiene\ el\ protocolo\ de\ conexion\ con\ motor\ de\ base\ de\ datos.\r\n\ @since\ \ \ \ \ 1.0\r\n\ @return\ \ \ \ \ \ \ \ \ \ <code>protocol</code>\r\n
comment3.params=
comment3.target=java.lang.String\ getPort()
comment3.text=\r\nObtiene\ el\ puerto\ de\ conexion\ con\ motor\ de\ base\ de\ datos.\r\n\ @since\ \ \ \ \ 1.0\r\n\ @return\ \ \ \ \ \ \ \ \ \ <code>port</code>\r\n
comment4.params=
comment4.target=java.lang.String\ getBd()
comment4.text=\r\nObtiene\ la\ direccion,\ del\ fichero\ de\ la\ base\ de\ datos.\r\npara\ su\ posterior\ conexion.\r\nEjemplo\ Firebird\ 3.0\ (Windows)\ C\:/poo/base_datos/BASE_25417V3.0.GDB\r\n\ @return\ \ \ \ \ \ \ \ \ \ <code>bd</code>\r\n\ @since\ \ \ \ \ 1.0\r\n
comment5.params=
comment5.target=java.lang.String\ getEncoding()
comment5.text=\r\nObtiene\ el\ Encoding\ de\ conexion\ con\ motor\ de\ base\ de\ datos.\r\nEjemplo\ Firebird\ 3.0\ (Windows)\ encoding\=NONE\r\n\ @return\ \ \ \ \ \ \ \ \ \ <code>encoding</code>\ \ \ \ \ *\r\n\ @since\ \ \ \ \ 1.0\r\n
comment6.params=
comment6.target=java.lang.String\ getUser()
comment6.text=\r\nObtiene\ el\ Usuario\ \ de\ conexion\ con\ motor\ de\ base\ de\ datos.\r\n\ @return\ \ \ \ \ \ \ \ \ \ <code>user</code>\r\n\ @since\ \ \ \ \ 1.0\r\n
comment7.params=
comment7.target=java.lang.String\ getPass()
comment7.text=\r\nObtiene\ la\ contrase\u00F1a\ de\ conexion\ con\ motor\ de\ base\ de\ datos.\r\n\ @return\ \ \ \ \ \ \ \ \ \ <code>pass</code>\r\n\ @since\ \ \ \ \ 1.0\r\n
comment8.params=
comment8.target=java.sql.Connection\ getConn()
comment8.text=\r\nObtiene\ la\ conexion\ con\ motor\ de\ base\ de\ datos.\r\nPreviamente\ se\ debera\ establecer\ la\ misma.\r\n\ @return\ \ \ \ \ \ \ \ \ \ <code>conn</code>\r\n\ @since\ \ \ \ \ 1.0\r\n
comment9.params=port
comment9.target=void\ setPort(java.lang.String)
comment9.text=\r\nObtiene\ la\ conexion\ con\ motor\ de\ base\ de\ datos.\r\nPreviamente\ se\ debera\ establecer\ la\ misma.\r\n\ @return\ \ \ \ \ \ \ \ \ \ <code>conn</code>\r\n\ @since\ \ \ \ \ 1.0\r\n
numComments=20
